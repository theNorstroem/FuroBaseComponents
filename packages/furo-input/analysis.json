{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-bool-icon`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-input/furo-bool-icon.js",
      "properties": [
        {
          "name": "myBool",
          "type": "boolean | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 38,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "symboltrue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 12
            },
            "end": {
              "line": 39,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "symbolfalse",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 39
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "toggle",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSymbol",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-bool-icon.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroBoolIcon",
      "attributes": [
        {
          "name": "my-bool",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 12
            },
            "end": {
              "line": 38,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "symboltrue",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 12
            },
            "end": {
              "line": 39,
              "column": 38
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "symbolfalse",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 39
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-bool-icon",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-input-password`\nSimple password input element which uses a native `<input type=\"password\">` tag\n\nTags: input",
      "summary": "password input element",
      "path": "packages/furo-input/furo-password-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPasswordInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-password-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-date`\nSimple date input element which uses a native `<input type=\"date\">` tag\n\nTags: input",
      "summary": "date input element",
      "path": "packages/furo-input/furo-date-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 155,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDateInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-date-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-ripple` gives the ripple effect to a element\n use it directly in an element:\n <button>\n      click here\n     <furo-ripple></furo-ripple>\n </button>\n\n or you can also trigger the ripple effect via wire\n <button @-click=\"--click\" >\n     ...\n     <furo-ripple Æ’-trigger=\"--click\"></furo-ripple>\n </button>\n with variable `--furo-ripple-bg-color` you can modify the backgroud color of the ripple effect\n\nLit element",
      "summary": "",
      "path": "packages/furo-input/furo-ripple.js",
      "properties": [
        {
          "name": "_hasConnected",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 469,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 472,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "hasUpdated",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 475,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 542,
              "column": 4
            },
            "end": {
              "line": 544,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 302,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 357,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestUpdate",
          "description": "This private version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 381,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 428,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_enqueueUpdate",
          "description": "Sets up the element to asynchronously update.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 432,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "performUpdate",
          "description": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.\n\nYou can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 494,
              "column": 4
            },
            "end": {
              "line": 524,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 525,
              "column": 4
            },
            "end": {
              "line": 528,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 554,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 581,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 592,
              "column": 4
            },
            "end": {
              "line": 593,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "adoptStyles",
          "description": "Applies styling to the element shadowRoot using the `static get styles`\nproperty. Styling will apply using `shadowRoot.adoptedStyleSheets` where\navailable and will fallback otherwise. When Shadow DOM is polyfilled,\nShadyCSS scopes styles and adds them to the document. When Shadow DOM\nis available but `adoptedStyleSheets` is not, styles are appended to the\nend of the `shadowRoot` to [mimic spec\nbehavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        },
        {
          "name": "trigger",
          "description": "animate the ripple effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "_ensureClassProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "finalize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's\n`converter` or `converter.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_getUniqueStyles",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "LitElement"
        }
      ],
      "demos": [
        {
          "url": "demo/furo-button.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroRipple",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ripple"
    },
    {
      "description": "`furo-button`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-input/furo-button.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Beschriftung des buttons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 38,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "danger",
          "type": "boolean | null | undefined",
          "description": "Set danger to true if it is dangerous to press this button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Set disabled to disable the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Focus the element automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 25,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-button.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroButton",
      "attributes": [
        {
          "name": "label",
          "description": "Beschriftung des buttons",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 38,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "danger",
          "description": "Set danger to true if it is dangerous to press this button",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Set disabled to disable the button",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Focus the element automatically",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-button",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-input-text`\nSimple text input element which uses a native `<input type=\"text\">` tag\n\nTags: input",
      "summary": "text input element",
      "path": "packages/furo-input/furo-text-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-text-input.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTextInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-text-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-text`\nSimple text input element which uses a native `<input type=\"text\">` tag\n\nTags: input",
      "summary": "text input element",
      "path": "packages/furo-input/furo-textarea-input.js",
      "properties": [
        {
          "name": "rows",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 151,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTextareaInput",
      "attributes": [
        {
          "name": "rows",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-textarea-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-search`\nSimple search input element which uses a native `<input type=\"search\">` tag\n\nTags: input",
      "summary": "search input element",
      "path": "packages/furo-input/furo-search-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroSearchInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-search-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-color`\nSimple color input element which uses a native `<input type=\"color\">` tag\n\nTags: input",
      "summary": "color input element",
      "path": "packages/furo-input/furo-color-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 129,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroColorInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-color-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-number`\nSimple number input element which uses a native `<input type=\"number\">` tag\n\nTags: input",
      "summary": "number input element",
      "path": "packages/furo-input/furo-number-input.js",
      "properties": [
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 6
            },
            "end": {
              "line": 20,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-number-input.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroNumberInput",
      "attributes": [
        {
          "name": "max",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 6
            },
            "end": {
              "line": 20,
              "column": 42
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-number-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-range`\nSimple range input element which uses a native `<input type=\"range\">` tag\n\nTags: input",
      "summary": "range input element",
      "path": "packages/furo-input/furo-range-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 142,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroRangeInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-range-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-time`\nSimple time input element which uses a native `<input type=\"time\">` tag\n\nTags: input",
      "summary": "time input element",
      "path": "packages/furo-input/furo-time-input.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTimeInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-time-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-checkbox`\nCheckbox input element which uses a native `<input type=\"checkbox\">` tag. Works best with furo-data components.\n\nTags: input",
      "summary": "checkbox input element",
      "path": "packages/furo-input/furo-checkbox-input.js",
      "properties": [
        {
          "name": "text",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/checkbox.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 127,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCheckboxInput",
      "attributes": [
        {
          "name": "text",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-checkbox-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-text`\nSimple text input element which uses a native `<input type=\"text\">` tag\n\nTags: input",
      "summary": "text input element",
      "path": "packages/furo-input/furo-collection-dropdown.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "injectCollection",
          "description": "Exposes --injectCollection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collection"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCollectionDropdown",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-collection-dropdown",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`reference-search-item`\nDescribe your element",
      "summary": "shortdescription",
      "path": "packages/furo-input/reference-search-item.js",
      "properties": [
        {
          "name": "myBool",
          "type": "boolean | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 30,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "injectItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "preselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "select",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/reference-search-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ReferenceSearchItem",
      "attributes": [
        {
          "name": "my-bool",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 30,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "item-selected",
          "description": "item-selected\nFired when item is selected\ndetail payload: item",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "reference-search-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-reference-search`\n Sucht eine Referenz\n\n\n```\n<!--  entity-object will eine Referenz auflÃ¶sen -->\n<entity-object type=\"vnd.com.acme.task\" @-object-ready=\"--entityReady\"></entity-object>\n\n<furo-horizontal-flex>\n   <!--  furo-reference-search kann eine Referenz die entity-objekt besitzt darstellen.\n   Bei einer Texteingabe wird ^^search mit dem eingegebenen Text gesucht. Diesr geht via wire --term an den collection-agent.\n   Wenn collection-agent eine Kollektion zurÃ¼ckliefert, klappt die Auswahl auf. -->\n   <furo-reference-search autofocus  flex Æ’-bind-data=\"--entityReady(*.fields.ref)\" @-search=\"--term\" Æ’-collection-in=\"--refCol\"></furo-reference-search>\n\n   <furo-reference-search  flex Æ’-bind-data=\"--entityReady(*.fields.ref)\" min-term-length=\"2\" @-search=\"--term\" Æ’-collection-in=\"--refCol\"></furo-reference-search>\n\n</furo-horizontal-flex>\n\n<!-- Der collection-agent erhÃ¤lt die hts von ref.value, wenn ein term eingegeben wurde beginnt dieser zu suchen.\nDie Resultate werden an furo-reference-search zurÃ¼ck gegeben. -->\n<collection-agent service=\"tasks\" Æ’-search=\"--term\" Æ’-hts-in=\"--entityReady(*.fields.ref.value)\" @-response=\"--refCol\"></collection-agent>\n\n```\n\n![alt text](demo/assets/ref-search.png \"Logo Title Text 1\")",
      "summary": "shortdescription",
      "path": "packages/furo-input/furo-reference-search.js",
      "properties": [
        {
          "name": "minTermLength",
          "type": "number | null | undefined",
          "description": "min-term-length before fire the search event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 65
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "idField",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 52
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldval"
            },
            {
              "name": "newval"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "collectionIn",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collection"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-reference-search.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 252,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroReferenceSearch",
      "attributes": [
        {
          "name": "min-term-length",
          "description": "min-term-length before fire the search event",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 65
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "id-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 52
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "search",
          "description": "search\nFired when term is entered and bigger then min-term-length\ndetail payload: {String} term",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-reference-search",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "packages/furo-input/FuroInputBase.js",
      "properties": [
        {
          "name": "value",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldval"
            },
            {
              "name": "newval"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 135,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Setze den Fokus auf dieses Element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 6,
          "column": 9
        },
        "end": {
          "line": 216,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "superClass"
    }
  ]
}
