{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-config`\n\nStellt eine Sektion der injecteten Konfigurationen zur Verf√ºgung\n```\n  <furo-config-injector data=\"{menu:true,...}\" section=\"views\"></furo-config-injector>\n\n  <furo-config section=\"views\" config=\"{{_viewConfig}}\"></furo-config>\n  <furo-config section=\"second.section.deep\" config=\"{{_subSubSubConfig}}\"></furo-config>\n```",
      "summary": "shared config",
      "path": "packages/furo-config/furo-config.js",
      "properties": [
        {
          "name": "config",
          "type": "Object | null | undefined",
          "description": "config\nDie konfiguration",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "section",
          "type": "string | null | undefined",
          "description": "section\nDie Sektion der Konfiguration mit optionaler Pfadangabe\n`views.home`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_resolveSection\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_resolveSection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "section"
            },
            {
              "name": "conf"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-config_demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 73,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroConfig",
      "attributes": [
        {
          "name": "config",
          "description": "config\nDie konfiguration",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "section",
          "description": "section\nDie Sektion der Konfiguration mit optionaler Pfadangabe\n`views.home`",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "config-updated",
          "description": "config-updated\nFired when section changed\ndetail payload: section config",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "config-changed",
          "description": "Fired when the `config` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-config",
      "mixins": [
        "FuroStateMixin"
      ]
    },
    {
      "description": "`furo-config-injector`\n\nladet eine Konfiguration in eine vorgegebene Sektion. Diese lassen sich mit furo-config in jeder Komponente verwenden.\n\n```\n  <furo-config-injector data=\"{menu:true,...}\" section=\"views\"></furo-config-injector>\n\n  <furo-config section=\"views\" config=\"{{_viewConfig}}\"></furo-config>\n```",
      "summary": "",
      "path": "packages/furo-config/furo-config-injector.js",
      "properties": [
        {
          "name": "data",
          "type": "Object | null | undefined",
          "description": "data\nDie Konfigurationsdateien",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "section",
          "type": "string | null | undefined",
          "description": "section\nDie Sektion in der die Antwort gesichert wird",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_injectConfig",
          "description": "Appends the loaded file to the state section",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "Object"
            },
            {
              "name": "section",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroConfigInjector",
      "attributes": [
        {
          "name": "data",
          "description": "data\nDie Konfigurationsdateien",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "section",
          "description": "section\nDie Sektion in der die Antwort gesichert wird",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "config-loaded",
          "description": "config-loaded\nFired when config is loaded and appended\ndetail payload: config",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-config-injector",
      "mixins": [
        "FuroStateMixin"
      ]
    },
    {
      "description": "`furo-config-loader`\n\nladet eine Konfiguration in eine vorgegebene Sektion. Diese lassen sich mit furo-config in jeder Komponente verwenden.\n\n```\n  <furo-config-loader src=\"/custom/view-config.json\" section=\"views\"></furo-config-loader>\n\n  <furo-config section=\"views\" config=\"{{_viewConfig}}\"></furo-config>\n```",
      "summary": "Loads a config file",
      "path": "packages/furo-config/furo-config-loader.js",
      "properties": [
        {
          "name": "src",
          "type": "string | null | undefined",
          "description": "src\nQuelle der Konfiguration",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 50,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "section",
          "type": "string | null | undefined",
          "description": "section\nDie Sektion in der die Antwort gesichert wird",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_axResponse",
          "type": "Object | null | undefined",
          "description": "Antwort von iron-ajax",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_appendConf",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 44
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "_stateAppend",
          "description": "Appends the loaded file to the state section",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "c"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__loadConfig",
          "description": "l√∂st den wire --compnentReady aus",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "src"
            },
            {
              "name": "section"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroConfigLoader",
      "attributes": [
        {
          "name": "src",
          "description": "src\nQuelle der Konfiguration",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 50,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "section",
          "description": "section\nDie Sektion in der die Antwort gesichert wird",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "config-loaded",
          "description": "config-loaded\nFired when config is loaded and appended\ndetail payload: config",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-config-loader",
      "mixins": [
        "FuroStateMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Mixin for a shared State accross n components\n\n## usage\n\nApply the mixin to your components and give a unique name for your state.\nThe state is available in the ._state property.\n\n```\n\n  class FuroStateConsumer extends FuroStateMixin(Polymer.Element) {\n\n    constructor() {\n      super('shared-config');\n    }\n\n    // _state.config.foo is shared accros every plugin with\n    // FuroStateMixin which registers to shared-config\n    someMethod(bar){\n      this.set('_state.config.foo',bar);\n    }\n\n\n```",
      "summary": "",
      "path": "packages/furo-config/shared-state.js",
      "properties": [
        {
          "name": "_subscribers",
          "type": "Array | null | undefined",
          "description": "The list of the consumers who will get notified.\nIf master disconnects, the next consumer becomes master",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_state",
          "type": "Object | null | undefined",
          "description": "The shared state",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "_setState",
          "description": "Set the _state.\nAll subscribes will be notified.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "description": "{String} the path (begins with _state)"
            },
            {
              "name": "value",
              "description": "{*} the value to set"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__appendPart",
          "description": "Create deep Objects for non existing path in object.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            },
            {
              "name": "parts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_register",
          "description": "registrierung der Empf√§nger",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "subscriber"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_unregister",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "subscriber"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "registration",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "deregistration",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 2
        },
        "end": {
          "line": 138,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "FuroStateImpl",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "",
      "summary": "",
      "path": "packages/furo-config/shared-state.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 146,
          "column": 7
        },
        "end": {
          "line": 146,
          "column": 44
        }
      },
      "privacy": "public",
      "name": "FuroStateMixin",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
